generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model groups {
  id          Int      @id @default(autoincrement())
  name        String?  @db.VarChar
  active_flag Boolean?
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  updated_at  DateTime @default(now()) @db.Timestamptz(6)
}

model status {
  id         Int      @id(map: "status_pk") @default(autoincrement())
  name       String?  @db.VarChar(255)
  color      String?  @db.VarChar(255)
  created_at DateTime @db.Timestamptz(6)
  updated_at DateTime @db.Timestamptz(6)
}

model tasks {
  id         Int      @id(map: "tasks_pk") @default(autoincrement())
  type_id    Int
  user_id    Int
  remark     String?  @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  status_id  Int?
}

model types {
  id         Int      @id(map: "types_pk") @default(autoincrement())
  name       String?  @db.VarChar(255)
  created_at DateTime @db.Timestamptz(6)
  updated_at DateTime @db.Timestamptz(6)
}

model users {
  id         Int      @id @default(autoincrement())
  firstname  String?  @db.VarChar(255)
  lastname   String?  @db.VarChar(255)
  email      String?  @db.VarChar(255)
  password   String?  @db.VarChar(255)
  tel        String?  @db.VarChar(255)
  address    String?  @db.VarChar(255)
  lat_lng    String?  @db.VarChar(255)
  status     String?  @db.VarChar(255)
  type       String?  @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  group_id   Int?
}

model uploadimage {
  id            Int      @id(map: "uploadimage_pk") @default(autoincrement())
  user_id       Int
  day_of_visit  String?  @db.VarChar(255)
  hospital      String?  @db.VarChar(255)
  image_rtpcr   String?  @db.VarChar(255)
  image_medical String?  @db.VarChar(255)
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @default(now()) @db.Timestamptz(6)
}
